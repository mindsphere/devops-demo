# Copyright Siemens AG 2018
# SPDX-License-Identifier: MIT

# The following CI/CD variables are required:
# - CF_ORG
# - CF_SPACE_DEV
# - CF_SPACE_STAGE
# - CF_API
# - CF_ACCESS_TOKEN
# - CF_REFRESH_TOKEN
# - CF_TECHUSER_CLIENT_ID
# - CF_TECHUSER_CLIENT_SECRET
# - CF_TECHUSER_OAUTH_ENDPOINT
# - JWKS_URI
# - JWT_ISSUER

# Optional you can also set the following ones if you are behind a proxy
# - npm_config_registry
# - npm_config_sass_binary_site
# - npm_config_chromedriver_cdnurl
# - https_proxy
# - no_proxy

stages:
  - test
  - deploy
  - notify

test:
  stage: test
  image: node:carbon
  variables:
    SELENIUM_URL: http://selenium__standalone-chrome:4444/wd/hub
    MONGODB_URL: mongodb://mongo:27017/e2e
  services:
    - selenium/standalone-chrome:3.5.2
    - mongo:3.2
  script:
    - yarn
    - yarn commitlint
    - yarn lint
    - yarn build --no-progress --prod
    - yarn build --no-progress
    - yarn test --no-progress --code-coverage
    - yarn --cwd server
    - yarn --cwd devops/devopsadmin
    - yarn license:all
    - export BASE_URL=http://$(hostname -i):3000
    - yarn e2e
  artifacts:
    reports:
      junit:
        - coverage/*.xml
        - test-reports/*.xml

mindsphere-dev:
  stage: deploy
  image: node:carbon
  environment:
    name: dev
  before_script:
    - curl -L "https://packages.cloudfoundry.org/stable?release=linux64-binary&source=github" | tar -zx
    - mv cf /usr/local/bin
    - mkdir -p ~/.cf
    - echo "{\"ConfigVersion\":3,\"Target\":\"$CF_API\",\"AccessToken\":\"bearer ${CF_ACCESS_TOKEN}\",\"RefreshToken\":\"${CF_REFRESH_TOKEN}\"}" > ~/.cf/config.json
  script:
    - cf target -o "$CF_ORG" -s "$CF_SPACE_DEV"
    - yarn
    - yarn build --no-progress --prod
    - cd server
    - yarn
    - cf push todo-dev --no-start
    - cf set-env todo-dev JWKS_URI "${JWKS_URI}"
    - cf set-env todo-dev JWT_ISSUER "${JWT_ISSUER}"
    - cf bind-service todo-dev todo-mongodb-dev
    - cf bind-service todo-dev todo-logme-dev
    - cf start todo-dev
  only:
    - master

mindsphere-stage:
  stage: deploy
  image: node:carbon
  environment:
    name: stage
  before_script:
    - curl -L "https://packages.cloudfoundry.org/stable?release=linux64-binary&source=github" | tar -zx
    - mv cf /usr/local/bin
    - mkdir -p ~/.cf
    - echo "{\"ConfigVersion\":3,\"Target\":\"$CF_API\",\"AccessToken\":\"bearer ${CF_ACCESS_TOKEN}\",\"RefreshToken\":\"${CF_REFRESH_TOKEN}\"}" > ~/.cf/config.json
  script:
    - cf target -o "$CF_ORG" -s "$CF_SPACE_STAGE"
    - yarn
    - yarn build --no-progress --prod
    - cd server
    - yarn
    - cf push todo-stage --no-start
    - cf set-env todo-stage JWKS_URI "${JWKS_URI}"
    - cf set-env todo-stage JWT_ISSUER "${JWT_ISSUER}"
    - cf bind-service todo-stage todo-mongodb-stage
    - cf bind-service todo-stage todo-logme-stage
    - cf start todo-stage
  only:
    - tags

mindsphere-notify:
  stage: notify
  image: node:carbon
  script:
    - set -euo pipefail
    - apt update && apt install jq -y
    - CF_TOKEN=$(curl -s -u "${CF_TECHUSER_CLIENT_ID}:${CF_TECHUSER_CLIENTSECRET}"
        -d "grant_type=client_credentials"
        -X POST "${CF_TECHUSER_OAUTH_ENDPOINT}" | jq -r -e '.access_token')
    - >-
        curl -s -X POST
        -H "Authorization: Bearer ${CF_TOKEN}"
        -H "Content-Type: application/json"
        --data '
        {
        "body":{"message":"MindSphere deployment successful: '"${CI_ENVIRONMENT_NAME}"'"},
        "recipientsTo":"mindsphere.devops@gmail.com",
        "from":"gitlab",
        "subject":"MindSphere deployment: '"${CI_ENVIRONMENT_NAME}"'"}
        '
        https://gateway.eu1.mindsphere.io/api/notification/v3/publisher/messages
